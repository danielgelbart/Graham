%ul.list-group
  %li.list-group-item.row.list-group-item-info.bold
    Market Data
    %div
      = @time
  %li.list-group-item.row
    %div.col-md-2
      Companies 
    %span.col-md-6
      = "Failed to include #{@failed_tickers.to_s}"
    %span.bold.col-md-4
      = @comp_data.size
  %li.list-group-item.row
    %span.bold
      Market Cap
    %div.row
      %div.col-md-8
        Total 
      %span.bold.col-md-4
        = is_to_s @total_market_cap
    %div.row
      %div.col-md-8
        Public
      %span.bold.col-md-4
        = is_to_s @pub_market_cap
    %div.row
      %div.col-md-8
        Index
      %span.bold.col-md-4
        = is_to_s @index_market_cap
  %li.list-group-item.row
    %div.col-md-8
      Total Market Earnings
    %span.bold.col-md-4
      = is_to_s @total_earnings
  %li.list-group-item.row
    %span.bold
      PE
    %div.row
      %div.col-md-8
        Market 
      %span.bold.col-md-4
        = short_float @total_market_cap / @total_earnings.to_f
    %div.row
      %div.col-md-8
        Public 
      %span.bold.col-md-4
        = short_float @pub_market_cap / @total_earnings.to_f
    %div.row
      %div.col-md-8
        Index 
      %span.bold.col-md-4
        = short_float @index_market_cap / @total_earnings.to_f
  %li.list-group-item.row
    %div.row
      %div.col-md-8
        Companies with Loss 
      %span.bold.col-md-4
        = "#{short_float @spe.losing_percent}%"
    %div.row
      %div.col-md-8
        Median PE 
      %span.bold.col-md-4
        = @spe.median_pe
  %li.list-group-item.row
    %div.col-md-3
      = "Using inferred divisor #{@inferred_divisor.to_i}"
    %span.bold.col-md-3
      = "Price #{ @index_price}"
    %span.bold.col-md-3
      = "Earnings #{ short_float @divisor_earnings}"
    %span.bold.col-md-3
      = "index PE #{ short_float @index_price / @divisor_earnings.to_f }"


%div.container
  %div.row
    %div.col-md-12
      =render 'data/pe_histogram'

- count = 0
%table.stock-list.sortable.table.table-hover
  %thead
    %th
      = "#"
    %th
      Ticker
    %th
      ttm Earning
    %th
      Revenue
    %th
      Margin
    %th
      ttm Eps   
    %th
      Float
    %th
      Price
    %th
      Market Cap  
    %th  
      MC / TE
    %th
      P / Eps
  %tbody
    - @comp_data.each do |d|
      %tr
        %td
          = count += 1 
        %td
          = link_to d.ticker, stock_path(Stock.get_from_ticker(d.ticker))
        %td
          = is_to_s d.ttm_earnings
        %td
          = is_to_s d.revenue
        %td
          - if d.margin.to_i < 20
            = d.margin.to_i
          - else
            .green
              = d.margin.to_i
        %td
          = short_float d.ttm_eps
        %td
          = is_to_s d.num_shares
        %td
          = "$ " + d.price.to_s
        %td
          = is_to_s d.market_cap
        %td
          - if d.market_pe < (@total_market_cap / @total_earnings.to_f)*0.75 && d.market_pe > 0   
            .green
              = short_float d.market_pe
          - else
            = short_float d.market_pe
        %td
          = short_float d.pe
        %td
          -if d.sanity_check
            .red 
              = "Check"


